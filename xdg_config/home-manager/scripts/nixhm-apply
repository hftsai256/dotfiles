#!/usr/bin/env bash
set -e

ROOT=$HOME/.config/home-manager
USER_FILE=$ROOT/ACTIVATED_USER

update() {
        pushd $ROOT > /dev/null
        nix flake update
        popd > /dev/null
}

apply() {
        pushd $ROOT > /dev/null
        nix build .#homeManagerConfigurations.$1.activationPackage \
                --show-trace \
                --impure \
                --extra-experimental-features flakes \
                --extra-experimental-features nix-command \
        && ./result/activate
        popd > /dev/null
}

user_menu() {
        options=($(awk '/(.*)[[:space:]]*=[[:space:]]*homeManagerConfiguration/ {print $1}' flake.nix))
        PS3="Select user profile: "
        select opt in "${options[@]}" "quit"; do
                case $opt in
                "quit")
                        break
                        ;;
                *)
                        echo ${opt%.nix}
                        break
                        ;;
                esac
        done
}

get_user() {
        [[ -f $USER_FILE ]] && cat $USER_FILE || (
                echo $(user_menu) | tee $USER_FILE
        )
}

install_nix() {
        curl --proto '=https' --tlsv1.2 -sSf -L https://install.determinate.systems/nix | sh -s -- install 
}

usage() {
        echo
        cat<<EOF
$(basename $0) [-u] [-r] [-s] -- Helper script for updating packages and profiles managed by nix, flakes and home-manager

Options:
        -u  update flakes
        -r  reset user profile
        -s  apply new settings

Example:
        $(basename $0) -su
EOF
}

active_user=$(get_user)
command -v nix 2>&1 >/dev/null || install_nix

while getopts ":su" opt; do
        case "$opt" in
                u)
                        action=1
                        echo "→ update flake"
                        update
                        ;;
                r)
                        action=1
                        echo "→ reset user profile"
                        rm $USER_FILE
                        get_user
                        ;;
                s)
                        action=1
                        echo "→ apply nix environment for user $active_user"
                        apply $active_user
                        ;;
        esac
done

[[ -z ${action+x} ]] && (
        usage
        exit 1
)
